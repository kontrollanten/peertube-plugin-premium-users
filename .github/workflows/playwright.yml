name: Playwright Tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Cache
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
            ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        working-directory: demo
        run: npm ci
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - name: Install Playwright Browsers
        working-directory: demo
        run: npx playwright install firefox --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - name: Run docker compose
        working-directory: demo
        run: docker compose up --build --wait
        env:
          STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
      - name: Show docker compose logs
        if: failure()
        working-directory: demo
        run: docker compose logs
      - name: Run Playwright tests
        working-directory: demo
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: demo/playwright-report/
          retention-days: 30
